{{/*Copyright Keiron Dang. All Rights Reserved.*/ -}}

{{/*
  if replicaCount > 0 or autoscaling hpa enabled, this yaml will be defined.
*/}}

{{/*
  apiVersion: apps/v1
  - must include `spec.selector` manually.
  apiVersion: apps/v1beta1
  - Kubernetes version < 1.16 only
*/}}
apiVersion: apps/v1
kind: StatefulSet

{{/* ObjectMeta */}}
metadata:
  {{/*
    the unique user-defined name of statefulset, or
    generateName (e.g., "kafka-")
    - the suffix is random, usually 5–10 alphanumeric characters.
    - generateName and name cannot both be set.
  */}}
  name: kafka-statefulset

  {{/* default to "default" namespace */}}
  namespace: kafka-namespace

  {{/* use to match selectors */}}
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/version: 4.0.0
    app.kubernetes.io/component: broker
    app.kubernetes.io/part-of: kafka
    app.kubernetes.io/instance: kafka-release
    app.kubernetes.io/managed-by: Helm

    {{/* some extend pairs -- key: value */}}
    key: value

  {{/* set by external tools to store and retrieve arbitrary metadata. */}}
  annotations:
    {{/* some extend pairs -- key: value */}}
    key: value

{{/* StatefulSetSpec */}}
spec:
  {{/* the desired number of replicas of the given Template. (default to 1) */}}
  replicas: 1

  {{/*
      controls how pods are created during initial scale up,
      when replacing pods on nodes, or when scaling down.
      (default to OrderedReady)
    */}}
  podManagementPolicy: OrderedReady

  {{/* must include `spec.selector` manually, if apiVersion is apps/v1 */}}
  {{/*
    a label query over pods that should match the replica count.
    it must match the pod template's labels.
  */}}
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
      app.kubernetes.io/component: broker
    {{/* matchExpressions: LabelSelectorRequirement */}}

  {{/* the name of the service that governs this StatefulSet. */}}
  serviceName: kafka-headless-service

  {{/* StatefulSetUpdateStrategy */}}
  updateStrategy:
    {{/* OnDelete | RollingUpdate */}}
    type: RollingUpdate

    {{/*
      when type: RollingUpdate,
      partition: N
      - pods with ordinal ≥ N are updated.
      - lower ordinals are left unchanged.
      - once you're satisfied with above pods,
        - you can lower the partition (0) to apply another.
      maxUnavailable: N or P% (default to 1)
      - only apply for Deployment kind.
      - the maximum number of pods that can be unavailable during the update.
    */}}
    rollingUpdate:
      partition: 0

  {{/* minimum no. seconds newly pod should be ready (default to 0) */}}
  minReadySeconds: 0

  {{/* PodTemplateSpec */}}
  template:
    {{/*
      no need name, automatically assigns a unique name to each Pod
      namespace is inherited from the parent resource.
    */}}
    metadata:
      labels:
        app.kubernetes.io/name: kafka
        app.kubernetes.io/version: 4.0.0
        app.kubernetes.io/component: broker
        app.kubernetes.io/part-of: kafka
        app.kubernetes.io/instance: kafka-release
        app.kubernetes.io/managed-by: Helm

        {{/* some extend pairs -- key: value */}}
        key: value

      annotations:
        {{/* some extend pairs -- key: value */}}
        key: value

    {{/* PodSpec */}}
    spec:
      {{/*
        automountServiceAccountToken
      */}}
      containers:
        - name:

  {{/* PersistentVolumeClaim array */}}
  {{/* a list of claims that pods are allowed to reference. */}}
  volumeClaimTemplates:


  {{/*
    StatefulSetPersistentVolumeClaimRetentionPolicy
    - the lifecycle of persistent volume claims created from volumeClaimTemplates.
  */}}
  persistentVolumeClaimRetentionPolicy:
