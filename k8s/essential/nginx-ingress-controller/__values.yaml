# Bitnami: NGINX Ingress Controller

# <service-name>.<namespace>.svc.<clusterDomain>
clusterDomain: cluster.local

image:
  registry: docker.io
  repository: bitnami/nginx-ingress-controller
  tag: 1.12.3-debian-12-r1
  digest: ""
  pullPolicy: IfNotPresent
  pullSecrets: []

containerPorts:
  http: 8080
  https: 8443
  defaultServer: 8181
  metrics: 10254
  profiler: 10245
  status: 10246
  stream: 10247

ingressClassResource:
  name: nginx
  enabled: true
  default: false
  controllerClass: "k8s.io/ingress-nginx"
  parameters: {}

kind: Deployment
replicaCount: 3
resourcesPreset: "nano"
resources: {}
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
startupProbe:
  enabled: false

defaultBackend:
  enabled: true
  image:
    registry: docker.io
    repository: bitnami/nginx
    tag: 1.28.0-debian-12-r3
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  containerPort: 8080
  replicaCount: 3
  resourcesPreset: "nano"
  resources: {}
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
  readinessProbe:
    enabled: true
    initialDelaySeconds: 30
  startupProbe:
    enabled: false

  service:
    type: ClusterIP
    ports:
      http: 80

  networkPolicy:
    enabled: true
    allowExternal: true
    allowExternalEgress: true

service:
  type: LoadBalancer
  ports:
    http: 80
    https: 443
  targetPorts:
    http: http
    https: https

networkPolicy:
  enabled: true
  allowExternal: true
  allowExternalEgress: true
  kubeAPIServerPorts: [443, 6443, 8443]

metrics:
  enabled: true
  service:
    type: ClusterIP
    ports:
      metrics: 9913